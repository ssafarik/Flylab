###
# Installation Instructions for Flylab.
#
# The bulk of the software runs on Ubuntu, but if you want to run the galvodriver using 
# a National Instruments DAQ, then you'll also need a Windows machine with winros (so far 
# I've tested it w/ winros hydro) to run just the galvodriver node.  If you have a
# different DAQ, then you'll need to write a galvodriver for it.
#
###

# Install ROS Hydro on Ubuntu.
sudo apt-get install ros-hydro-desktop-full
sudo apt-get install ros-hydro-cmake-modules
sudo rosdep init
rosdep update


# Get a few additional pieces.
sudo easy_install munkres
sudo apt-get install python-setuptools
sudo apt-get install python-numpy
sudo apt-get install python-scipy
sudo apt-get install libdc1394-22-dev
sudo apt-get install intltool
sudo apt-get install gobject-introspection


# Get the Flylab software.
cd ~/src.git
git clone https://github.com/ssafarik/Flylab.git
sudo copy ~/src.git/Flylab/udevrules/99-simple_step.rules /etc/udev/rules.d 


# Get simple_step.
cd ~/src.hg
hg clone https://bitbucket.org/willdickson/simple_step
sudo python ~/src.hg/simple_step/api/python/setup.py develop
cd ~/src.git
git clone https://github.com/ssafarik/rosSimpleStep.git
git clone https://github.com/strawlab/pylibusb.git
sudo python ~/src.git/pylibusb/setup.py install



# Get Aravis camera library.
Download the latest release from https://wiki.gnome.org/Aravis, 
for example:  http://ftp.acc.umu.se/pub/GNOME/sources/aravis/0.3/aravis-0.3.0.tar.xz 
tar -xzf aravis-0.3.0.tar.xz   # To extract the files.
cd aravix-0.3.0
./configure
make && sudo make install


# Set up a catkin workspace.
mkdir -p ~/catkin/src


# Get camera_aravis.
cd ~/catkin/src
git clone http://github.com/ssafarik/camera_aravis.git
cd ~/catkin && catkin_make


# Run the following commands (adjust them first if necessary).
echo "source /opt/ros/hydro/setup.bash" >> ~/.bashrc
echo "export ROS_IP=123.456.789.012" >> ~/.bashrc                                   # (i.e. your ip)
echo "export ROS_MASTER_URI=http://localhost:11311" >> ~/.bashrc
echo "export PYTHONPATH=~/src.git/Flylab/arena_tf/src:~/src.git/Flylab/flycore/src:$PYTHONPATH" >> ~/.bashrc
echo "source ~/catkin/devel/setup.bash" >> ~/.bashrc
echo "export ROS_PACKAGE_PATH=~/src.git:~/src.hg:$ROS_PACKAGE_PATH" >> ~/.bashrc    # (Assuming your ROS projects are in these two directories).
echo "export RIG=bigtop" >> ~/.bashrc                                               # (change this to the name of your Flylab rig)



# Make the Flylab software.
rosmake flylaball


# Verify that you have proper hardware:  i.e. a Flylab rig (the "RIG=___" line in your .bashrc) that consists 
# of, at minimum, a tracking camera (preferably ethernet) and an arena for flies to walk around.  It might also 
# have a robotic mechanism, a laser/galvo system, LED panels, lighting, etc. 
# 


# You're done!
# Assuming that flylaball finished without errors, and that you have functioning Flylab hardware, then you 
# should be able to run an experiment, for example:
roslaunch experiments testtracking.launch  





